var vueComposableCookie = (function (exports, compositionApi, Cookies) {
    'use strict';

    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e["default"] : e; }

    var Cookies__default = /*#__PURE__*/_interopDefaultLegacy(Cookies);

    const isUndefined = (val) => typeof val === "undefined";
    const isNull = (val) => val === null;

    function useCookie(key, defaultValue, defaultOptions) {
        let cookie = compositionApi.ref(null);
        let _options;
        let value = Cookies__default.get(key);
        if (isUndefined(value)) {
            cookie.value = defaultValue;
            if (!isUndefined(defaultValue) && !isNull(defaultValue)) {
                Cookies__default.set(key, defaultValue, defaultOptions);
                _options = defaultOptions;
            }
        }
        else {
            cookie.value = value;
        }
        const setCookie = (newValue, options) => {
            cookie.value = newValue;
            _options = options;
            Cookies__default.set(key, cookie.value, _options);
        };
        const removeCookie = () => {
            cookie.value = undefined;
            Cookies__default.remove(key, _options);
        };
        compositionApi.watch(cookie, (cookie, prevCookie) => {
            if (isUndefined(cookie) || isNull(cookie)) {
                Cookies__default.remove(key, _options);
            }
            else if (cookie !== prevCookie) {
                Cookies__default.set(key, cookie, _options);
            }
        }, {
            deep: true,
        });
        return {
            cookie,
            setCookie,
            removeCookie,
        };
    }

    exports.useCookie = useCookie;

    Object.defineProperty(exports, '__esModule', { value: true });

    return exports;

})({}, vueCompositionApi, Cookies);
